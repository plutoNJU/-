分治法将一个难以解决的大问题划分成一些规模较小的子问题，分别求解各个子问题，再合并子问题的解得到原问题的解。一般分为三个阶段：
1.划分：把规模为n的问题划分为k个（通常为2）规模较小的子问题；
2.求解子问题：各子问题的解法与原问题的解法通常是相同的，可以用递归的方法解决各个子问题，有时递归处理也可以用循环解决；
3.合并：把各个子问题的解合并起来，合并的代价因情况不同有很大差异，分治法的效率很大程度上依赖于合并的实现。
不是所有的分治法都比简单的蛮力法更有效（比如计算a^n），但正确使用分治法往往比其他算法设计方法效率更高，事实上，分治法孕育了CS中许多重要的和有效的算法。
