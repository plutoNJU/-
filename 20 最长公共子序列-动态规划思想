最长公共子序列问题-动态规划
问题：给定两个序列X和Y，当序列Z既是X的子序列，也是Y的子序列时，称Z是X和Y的公共子序列。最长公共子序列问题就是在序列X和序列Y查找
最长的公共子序列。
最长公共子序列问题满足最优性原理（证明略）。
定义子问题：设L(m,n)表示序列X={x1,x2,…,xm}和Y={y1,y2,…,yn}的最长公共子序列的长度，显然，初始子问题是序列X和Y至少有一个空序列，即：
L(0,0)=L(0,j)=L(i,0)=0   1<=i<=m,1<=j<=n
考虑原问题的一部分，设L(i,j)表示子序列Xi和Yj的最长公共子序列的长度，当xi=yj时，可以找出X(i-1)和Y(j-1)的最长公共子序列，
然后在其尾部加上xi即可得到Xi和Yi的最长公共子序列；当xi不等于yj时，必须求解两个子问题，找出X(i-1)和Yj的最长公共子序列以及Xi和Y(j-1)的
最长公共子序列。这两个公共子序列中较长者即为Xi和Yj的最长公共子序列，则有以下动态规划函数：
L(i,j)=  L(i-1,j-1)+1       xi=yj,i>=1,j>=1
L(i,j)=  max{L(i,j-1),L(i-1,j)}   xi !=yj, i>=1,j>=1

为了得到序列Xm和Yn具体的最长公共子序列，设二维表S(m,n)记载求解过程中的状态变化，其中S(i,j)表示在计算L(i,j)时的搜索状态，并且有
S(i,j)=   1,    xi=yj
S(i,j)=   2,    xi != yj 且L(i,j-1)>=L(i-1,j)
S(i,j)=   3,    xi != yj 且L(i,j-1)<L(i-1,j)

若S(i,j)=1,表明下一个搜索方向是S(i-1,j-1);
若S(i,j)=2,表明下一个搜索方向是S(i,j-1);
若S(i,j)=3,表明下一个搜索方向是S(i-1,j)
